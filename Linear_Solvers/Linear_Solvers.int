interface 

  subroutine Backward_Substitution(x, f, b)
    implicit none
    real, dimension(:)   :: x
    real, dimension(:,:) :: f
    real, dimension(:)   :: b
  end subroutine Backward_Substitution

  subroutine Backward_Substitution_Compressed(x, f, b)
    use Matrix_Mod
    implicit none
    real, dimension(:) :: x
    type(Matrix)       :: f
    real, dimension(:) :: b
  end subroutine Backward_Substitution_Compressed

  subroutine Cholesky_Factorization(f, a)
    implicit none
    real, dimension(:,:) :: f
    real, dimension(:,:) :: a
  end subroutine Cholesky_Factorization

  subroutine Cholesky_Factorization_Compressed(f, a)
    use Matrix_Mod
    implicit none
    type(Matrix)         :: f
    type(Matrix)         :: a
  end subroutine Cholesky_Factorization_Compressed

  subroutine Forward_Substitution(x, f, b)
    implicit none
    real, dimension(:)   :: x
    real, dimension(:,:) :: f
    real, dimension(:)   :: b
  end subroutine Forward_Substitution

  subroutine Forward_Substitution_Compressed(x, f, b)
    use Matrix_Mod
    implicit none
    real, dimension(:)   :: x
    type(Matrix)         :: f
    real, dimension(:)   :: b
  end subroutine Forward_Substitution_Compressed

  subroutine Gaussian_Elimination(g, b, a)
    implicit none
    real, dimension(:,:) :: g
    real, dimension(:)   :: b
    real, dimension(:,:) :: a
  end subroutine Gaussian_Elimination

  subroutine LDLT_Factorization(f, a)
    implicit none
    real, dimension(:,:) :: f
    real, dimension(:,:) :: a
  end subroutine LDLT_Factorization

  subroutine LDLT_Factorization_Compressed(f, a)
    use Matrix_Mod
    implicit none
    type(Matrix)         :: f
    type(Matrix)         :: a
  end subroutine LDLT_Factorization_Compressed

  subroutine LDLT_Solution(x, f, b)
    implicit none
    real, dimension(:)   :: x
    real, dimension(:,:) :: f
    real, dimension(:)   :: b
  end subroutine LDLT_Solution

  subroutine LDLT_Solution_Compressed(x, f, b)
    use Matrix_Mod
    implicit none
    real, dimension(:)   :: x
    type(Matrix)         :: f
    real, dimension(:)   :: b
  end subroutine LDLT_Solution_Compressed

  subroutine Prec_Form(N, A, D) 
    use Matrix_Mod
    implicit none
    integer      :: N
    type(Matrix) :: A
    type(Matrix) :: D    
    integer      :: prec
  end subroutine Prec_Form

  subroutine Prec_Solve(N, NB, A, D, x, b) 
    use Matrix_Mod
    implicit none
    integer      :: N, NB
    type(Matrix) :: A
    type(Matrix) :: D
    real         :: x(-NB:N), b(N)
  end subroutine Prec_Solve

end interface
